#!/bin/bash
errecho () { echo $@ > /dev/stderr; }

pkgsrc=$(dpkg-parsechangelog | sed -n 's/^Source: //p')
changelogVersion=$(dpkg-parsechangelog | sed -n 's/^Version: //p')
lastReleaseTag=$(git describe --abbrev=0 --tags --match "${pkgsrc}_*")
lastRelease=${lastReleaseTag/#${pkgsrc}_/}
lrGitCommits=$(git rev-list ${lastReleaseTag}..HEAD ^debian-unstable --count)
upstreamTag=$(git describe --abbrev=0 --tags)
usBase=$(expr match "$upstreamTag" '^[^0-9]*\(.*$\)')
usGitCommits=$(git rev-list ${upstreamTag}..HEAD ^debian-unstable --count)

# Reverse any ~ substitutions
lastRelease=${lastRelease/"@t@"/"~"}

# Grab the base upstream version (everything to the left of the first "-")
lrBase=${lastRelease%%-*}
clBase=${changelogVersion%%-*}

# Grab the debian packaging version
lrDeb=$(expr match "$lastRelease" '^.\+-\([0-9]\+\)_.*')
clDeb=$(expr match "$changelogVersion" '^.\+-\([0-9]\+\)')

# Pull out the build number from latest release tag.
lrBuild=$(expr match "$lastRelease" '^.\+_\([0-9]\+\).*')

# The latest build/release tag and changelog should match.
if $(dpkg --compare-versions "${clBase}-${clDeb}" ne "${lrBase}-${lrDeb}"); then
    errecho "WARNING: Changelog and latest release tag do not match"
fi

lrVersion="${lrBase}+${lrGitCommits}"
usVersion="${usBase}+${usGitCommits}"

if [[ ! -z "$upstreamTag" ]] && $(dpkg --compare-versions "${usVersion}" gt "${lrVersion}"); then
    errecho "NOTE: Version based on newer upstream tag detected since last release (${lrVersion})"
    echo ${usVersion}
else
    errecho "NOTE: Version based on last release tag (${lastRelease%-*})"
    echo ${lrVersion}
fi


